351:352;Calculus;;Wed (all), 16:15-17:45;Mary Madison;0;170;0;0\n351:353;Calculus;1;Mon (all), 08:00-09:30;Luke Skywalker;13;14;1;14\n351:362;Calculus;10;Thu (all), 11:15-12:45;Kate Knight;13;14;2;14\n351:363;Calculus;11;Thu (all), 12:50-14:20;Kate Knight;13;14;3;14\n351:364;Calculus;12;Tue (all), 14:40-16:10;William Smith;13;14;0;13\n351:365;Calculus;13;Tue (all), 16:10-17:40;William Smith;13;14;0;13\n351:354;Calculus;2;Mon (all), 17:50-19:20;Luke Skywalker;13;14;1;14\n351:355;Calculus;3;Mon (all), 19:20-20:50;Luke Skywalker;13;14;0;14\n351:356;Calculus;4;Tue (all), 08:00-09:30;Martin Orlando;13;14;0;14\n351:357;Calculus;5;Tue (all), 09:35-11:05;Martin Orlando;13;14;0;13\n351:358;Calculus;6;Thu (all), 11:15-12:45;Barbara Goods;13;14;0;13\n351:359;Calculus;7;Thu (all), 12:50-14:20;Barbara Goods;13;14;0;13\n351:360;Calculus;8;Fri (all), 08:00-09:30;Matt Johnson;13;14;2;14\n351:361;Calculus;9;Fri (all), 09:35-11:05;Matt Johnson;13;14;0;14\n349:366;Software Engineering;;Tue (all), 11:15-12:45;Margaret Lindgren;0;146;0;0\n349:367;Software Engineering;1;Fri (A), 09:35-11:05;Margaret Lindgren;11;12;0;11\n349:376;Software Engineering;10;Fri (B), 12:50-14:20;Eva Peron;11;12;0;11\n349:377;Software Engineering;11;Thu (A), 11:15-12:45;Eva Peron;11;12;2;12\n349:378;Software Engineering;12;Thu (B), 11:15-12:45;Eva Peron;11;12;1;12\n349:379;Software Engineering;13;Thu (A), 12:50-14:20;Eva Peron;11;12;1;12\n349:368;Software Engineering;2;Fri (B), 09:35-11:05;Margaret Lindgren;11;12;0;11\n349:369;Software Engineering;3;Fri (A), 11:15-12:45;Margaret Lindgren;11;12;0;11\n349:370;Software Engineering;4;Fri (B), 11:15-12:45;Margaret Lindgren;11;12;0;11\n349:371;Software Engineering;5;Fri (A), 09:35-11:05;Eva Peron;11;12;0;11\n349:372;Software Engineering;6;Fri (B), 09:35-11:05;Eva Peron;11;12;0;11\n349:373;Software Engineering;7;Fri (A), 11:15-12:45;Eva Peron;11;12;0;12\n349:374;Software Engineering;8;Fri (B), 11:15-12:45;Eva Peron;11;12;0;12\n349:375;Software Engineering;9;Fri (A), 12:50-14:20;Eva Peron;11;12;0;11\n344:450;English;;Mon (all), 14:00-17:00;S JO;0;129;0;0\n344:451;English;;Thu (all), 08:00-11:00;S JO;0;129;0;0\n350:443;Statistics;;Mon (all), 09:35-11:05;Susan Uphill;0;162;0;0\n350:444;Statistics;1;Mon (A), 11:15-12:45;Susan Uphill;27;28;1;28\n350:445;Statistics;2;Tue (A), 09:35-11:05;Susan Uphill;27;28;1;27\n350:446;Statistics;3;Tue (A), 14:40-16:10;Susan Uphill;27;28;0;28\n350:447;Statistics;4;Fri (A), 09:35-11:05;Konrad Nosek;27;28;3;28\n350:448;Statistics;5;Thu (A), 12:50-14:20;Rowan Atkinson;27;28;0;27\n350:449;Statistics;6;Thu (A), 14:40-16:10;Rowan Atkinson;27;28;0;27\n347:381;OS Architecture;;Tue (B), 12:50-14:20;Christopher Miles;0;152;0;0\n347:380;OS Architecture;;Tue (A), 12:50-14:20;Robin Hood;0;152;0;0\n347:382;OS Architecture;1;Tue (all), 14:40-16:10;Johnny Cash;12;13;1;13\n347:390;OS Architecture;10;Fri (all), 14:40-16:10;Lionel Gray;12;13;0;13\n347:391;OS Architecture;11;Fri (all), 08:00-09:30;Martin Deer;12;13;0;12\n347:392;OS Architecture;12;Fri (all), 09:35-11:05;Martin Deer;12;13;0;13\n347:393;OS Architecture;13;Fri (all), 11:15-12:45;Martin Deer;12;13;0;13\n347:383;OS Architecture;2;Tue (all), 16:15-17:45;Johnny Cash;12;13;0;13\n347:384;OS Architecture;3;Tue (all), 17:50-19:20;Johnny Cash;12;13;0;13\n347:385;OS Architecture;5;Thu (all), 09:35-11:05;Eva Peron;12;13;1;13\n347:386;OS Architecture;6;Tue (all), 09:35-11:05;Eva Peron;12;13;0;13\n347:387;OS Architecture;7;Wed (all), 12:50-14:20;Eva Peron;12;13;2;13\n347:388;OS Architecture;8;Mon (all), 17:50-19:20;Eva Peron;12;13;0;13\n347:389;OS Architecture;9;Fri (all), 12:50-14:20;Lionel Gray;12;13;0;12\n345:394;Microprocessors;;Wed (all), 14:40-16:10;Robert Birch;0;146;0;0\n345:395;Microprocessors;1;Tue (all), 09:35-11:05;Albert Downing;11;12;0;12\n345:404;Microprocessors;10;Thu (all), 17:50-19:20;Robert Birch;11;12;0;12\n345:405;Microprocessors;11;Fri (all), 09:35-11:05;Albert Downing;11;12;0;12\n345:406;Microprocessors;12;Fri (all), 11:15-12:45;Albert Downing;11;12;0;12\n345:407;Microprocessors;13;Fri (all), 12:50-14:20;Albert Downing;11;12;0;12\n345:396;Microprocessors;2;Tue (all), 14:40-16:10;Roman Pot;10;10;0;10\n345:397;Microprocessors;3;Tue (all), 16:15-17:45;Roman Pot;10;10;0;10\n345:398;Microprocessors;4;Tue (all), 17:50-19:20;Roman Pot;10;10;0;10\n345:399;Microprocessors;5;Tue (all), 19:30-21:00;Roman Pot;10;10;0;10\n345:400;Microprocessors;6;Wed (all), 17:50-19:20;Robert Birch;11;12;0;12\n345:401;Microprocessors;7;Thu (all), 12:50-14:20;Albert Downing;11;12;0;12\n345:402;Microprocessors;8;Thu (all), 14:40-16:10;Robert Birch;11;12;3;12\n345:403;Microprocessors;9;Thu (all), 16:15-17:45;Robert Birch;11;12;1;12\n346:408;Object-Oriented Programming;;Wed (all), 09:35-11:05;Mark Pudding;0;149;0;0\n346:409;Object-Oriented Programming;1;Mon (A), 08:00-09:30;Arya Stark;11;12;1;12\n346:418;Object-Oriented Programming;10;Mon (B), 17:50-19:20;Michael Jung;11;12;0;12\n346:419;Object-Oriented Programming;11;Tue (A), 17:50-19:20;Michael Jung;11;12;0;12\n346:420;Object-Oriented Programming;12;Tue (B), 17:50-19:20;Michael Jung;11;12;0;11\n346:421;Object-Oriented Programming;13;Wed (B), 17:50-19:20;Michael Jung;11;12;0;11\n346:410;Object-Oriented Programming;2;Mon (B), 08:00-09:30;Arya Stark;11;12;0;12\n346:411;Object-Oriented Programming;3;Thu (A), 11:15-12:45;Otto Stein;11;12;1;12\n346:412;Object-Oriented Programming;4;Thu (B), 11:15-12:45;Otto Stein;11;12;0;12\n346:413;Object-Oriented Programming;5;Tue (A), 19:30-21:00;Matthew Springer;11;12;0;11\n346:414;Object-Oriented Programming;6;Tue (B), 19:30-21:00;Matthew Springer;11;12;0;11\n346:415;Object-Oriented Programming;7;Tue (A), 08:00-09:30;Michael Andboar;11;12;1;11\n346:416;Object-Oriented Programming;8;Tue (B), 08:00-09:30;Jane Austen;11;12;1;12\n346:417;Object-Oriented Programming;9;Mon (A), 17:50-19:20;Bilal Hamal;11;12;0;12\n343:422;Compilation theory;;Wed (all), 08:00-09:30;Hans Kloss;0;157;0;0\n343:423;Compilation theory;1;Mon (A), 08:00-09:30;Hans Kloss;26;27;1;26\n343:424;Compilation theory;2;Mon (B), 08:00-09:30;Hans Kloss;26;27;0;26\n343:425;Compilation theory;3;Tue (A), 08:00-09:30;Martin Smith;26;27;1;27\n343:426;Compilation theory;4;Tue (B), 09:35-11:05;Martin Smith;26;27;0;26\n343:427;Compilation theory;5;Tue (B), 08:00-09:30;Martin Smith;26;27;1;26\n343:428;Compilation theory;6;Tue (A), 09:35-11:05;Martin Smith;26;27;1;27\n348:429;Concurrent Programming;;Wed (all), 11:15-12:45;Bob Schlaffer;0;147;0;0\n348:430;Concurrent Programming;1;Thu (all), 11:15-12:45;Alicia Snow;11;12;0;11\n348:439;Concurrent Programming;10;Tue (all), 08:00-09:30;Derek Redding;11;12;0;11\n348:440;Concurrent Programming;11;Fri (all), 11:15-12:45;Bilbo Baggins;11;12;1;12\n348:441;Concurrent Programming;12;Mon (all), 17:50-19:20;Matthew Jones;11;12;0;12\n348:442;Concurrent Programming;13;Mon (all), 19:30-21:00;Matthew Jones;11;12;0;11\n348:431;Concurrent Programming;2;Thu (all), 12:50-14:20;Alicia Snow;11;12;1;11\n348:432;Concurrent Programming;3;Wed (all), 12:50-14:20;Kate Knight;11;12;0;12\n348:433;Concurrent Programming;4;Tue (all), 09:35-11:05;Kate Knight;11;12;1;12\n348:434;Concurrent Programming;5;Tue (all), 09:35-11:05;William Smith;11;12;0;11\n348:435;Concurrent Programming;6;Thu (all), 11:15-12:45;William Smith;11;12;0;12\n348:436;Concurrent Programming;7;Mon (all), 08:00-09:30;Derek Redding;11;12;0;11\n348:437;Concurrent Programming;8;Fri (all), 14:40-16:10;Matthew Jones;11;12;0;11\n348:438;Concurrent Programming;9;Fri (all), 08:00-09:30;Bilbo Baggins;11;12;1;12\n
